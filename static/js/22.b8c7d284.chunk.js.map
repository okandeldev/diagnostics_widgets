{"version":3,"file":"static/js/22.b8c7d284.chunk.js","mappings":"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","sources":["../node_modules/@stencil/core/internal/client|lazy|/^/.*$/|include: /.entry/.js$/|exclude: /.system/.entry/.js$/|groupOptions: {}|namespace object","app/constants/appRoutes.ts","app/constants/index.ts","typings/DexcomSettings.ts","components/common/Rotator.tsx","components/CgmSummary/index.tsx","pages/home/index.tsx","app/hooks/useNavigateTo.ts","components/DexcomSettings/Settings.tsx","components/DexcomSettings/Transmitter.tsx","components/DexcomSettings/index.tsx","pages/settings/index.tsx","pages/Routing.tsx","app/hooks/useDetectMobilePlatform.tsx","components/Navigatons/header.tsx","App.tsx","app/theme/index.ts","reportWebVitals.js","bootstrap.js"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 6031;\nmodule.exports = webpackEmptyAsyncContext;","export enum appRoutes {\r\n  ROOT = \"/\",\r\n  HOME_PAGE = \"/home\",\r\n  Settings = \"/settings\", \r\n}\r\n","export { appRoutes } from \"./appRoutes\";\r\nexport const Constants = Object.freeze({\r\n    BASE_URL_ANDROID: \"http://localhost\",\r\n    BASE_URL_IOS: \"capacitor://lorehealthcare.io\",\r\n    TRIGGER_WEBVIEW_NAVIGATION: \"trigger-webview-navigation\",\r\n    DEVICE_REGISTERED: \"deviceRegistered\",\r\n    DEVICE_TOKEN: \"deviceToken\",\r\n  \r\n    DesktopPlatform: \"desktop\",\r\n    MobileDesktopPlatform: \"mobileweb\",\r\n  \r\n      \r\n    ERROR_TITLE: \"Something went wrong.\",\r\n    ERROR_CODES: {\r\n      DISABLED_USER: 423,\r\n      CONFLICT: 409,\r\n      DUPLICATE_USERNAME: 4091,\r\n      DUPLICATE_USER: 4092,\r\n    },\r\n  });","export enum DexcomSettingsCurrentStep {\r\n  Settings,\r\n  Transmitter,\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Editable,\r\n  EditablePreview,\r\n  EditableInput,\r\n  Flex,\r\n  Heading,\r\n  Text,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\n\r\ntype IProps = {\r\n  currentReading: number;\r\n  onChangeReading: (newReading: string) => void;\r\n};\r\n\r\nconst Rotator: React.FC<IProps> = ({ currentReading, onChangeReading }) => {\r\n  return (\r\n    <Box>\r\n      <Flex\r\n        zIndex={1}\r\n        position=\"absolute\"\r\n        w={16}\r\n        h={16}\r\n        border=\"5px solid #4EB748\"\r\n        borderRadius={50}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <VStack alignItems=\"center\" spacing={0} lineHeight={0.4} pb={2}>\r\n          <Heading as=\"h2\" size=\"md\" color=\"#377524\">\r\n            <Editable\r\n              defaultValue={currentReading.toString()}\r\n              onSubmit={(e) => onChangeReading(e)}\r\n            >\r\n              <EditablePreview />\r\n              <EditableInput width={\"100%\"} />\r\n            </Editable>\r\n          </Heading>\r\n          <Text as=\"small\" fontSize={12}>\r\n            mg/dL\r\n          </Text>\r\n        </VStack>\r\n      </Flex>\r\n      <Flex\r\n        w={16}\r\n        h={16}\r\n        border=\"5px solid #4EB748\"\r\n        borderRadius=\"10px 50px 50px 50px\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        transform={`rotate(${currentReading + 45}deg)`}\r\n        transition=\"transform .5s\"\r\n      ></Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Rotator;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Flex,\r\n  Heading,\r\n  Icon,\r\n  Spacer,\r\n  Stack,\r\n  Text,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport { FaCog } from \"react-icons/fa\";\r\n\r\nimport Rotator from \"../common/Rotator\";\r\ninterface Props {\r\n  onNavigateSettings: () => void;\r\n}\r\nconst CgmWidgetContainer: React.FC<Props> = (props: Props) => {\r\n  const [reading, setReading] = useState<number>(0);\r\n  return (\r\n    <Box mt={3} width=\"full\">\r\n      <Card bg=\"white\" textAlign=\"initial\" my={2} pb={2} mx={2}>\r\n        <CardHeader p={2}>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Text color=\"brand.main\" fontWeight=\"bold\">\r\n              CGM Summary\r\n            </Text>\r\n            <Icon\r\n              color=\"brand.main\"\r\n              as={FaCog}\r\n              onClick={props.onNavigateSettings}\r\n              cursor=\"pointer\"\r\n            />\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody p={2}>\r\n          <Flex>\r\n            <Rotator\r\n              currentReading={reading}\r\n              onChangeReading={(newReading) => setReading(parseInt(newReading))}\r\n            />\r\n          </Flex>\r\n        </CardBody>\r\n      </Card>\r\n      {/* <Card bg=\"white\" textAlign=\"initial\" my={2} pb={2} mx={2}>\r\n        <CardHeader p={2}>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Text color=\"brand.main\" fontWeight=\"bold\">\r\n              CGM summary\r\n            </Text>\r\n            <Icon color=\"brand.main\" as={FaCog} />\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody p={2}>\r\n          <Flex>\r\n            <Rotator\r\n              currentReading={reading}\r\n              onChangeReading={(newReading) => setReading(parseInt(newReading))}\r\n            />\r\n          </Flex>\r\n        </CardBody>\r\n      </Card> */}\r\n      {/* <Card bg=\"white\" textAlign=\"initial\" my={2} pb={2} mx={2}>\r\n        <CardHeader p={2}>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Text color=\"brand.main\" fontWeight=\"bold\">\r\n              Widget 3\r\n            </Text>\r\n            <Icon color=\"brand.main\" as={FaCog} />\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody p={2}>\r\n          <Flex>\r\n            <Rotator\r\n              currentReading={reading}\r\n              onChangeReading={(newReading) => setReading(parseInt(newReading))}\r\n            />\r\n          </Flex>\r\n        </CardBody>\r\n      </Card> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CgmWidgetContainer;\r\n","import React, { useState } from \"react\";\r\nimport { appRoutes } from \"app/constants\";\r\nimport { Box, VStack } from \"@chakra-ui/react\";\r\nimport { useNavigateTo } from \"app/hooks/useNavigateTo\";\r\n\r\nimport CgmWidgetContainer from \"components/CgmSummary\";\r\nconst Home: React.FC = () => {\r\n  const { navigateTo } = useNavigateTo();\r\n  return (\r\n    <VStack mt={3} width=\"full\" spacing={3}>\r\n      <p>Home Page</p>\r\n      <CgmWidgetContainer\r\n        onNavigateSettings={() => {\r\n          navigateTo(appRoutes.Settings);\r\n        }}\r\n      />\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport { appRoutes } from \"app/constants\"; \r\n\r\nexport const useNavigateTo = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const navigateTo = <T>(\r\n    to: appRoutes | string,\r\n    state?: T,\r\n    replace?: boolean\r\n  ) => {\r\n    navigate(to, { state, replace });\r\n\r\n  }; \r\n\r\n  const navigateBack = () => {\r\n    navigate(-1)\r\n  }\r\n\r\n  return { navigateTo, navigateBack };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Flex,\r\n  Heading,\r\n  Icon,\r\n  Spacer,\r\n  Stack,\r\n  Text,\r\n  VStack,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n  TableContainer,\r\n  HStack,\r\n} from \"@chakra-ui/react\";\r\nimport { FaChevronRight } from \"react-icons/fa\";\r\nimport { DexcomSettingsCurrentStep } from \"typings\";\r\ntype Props = {\r\n  setCurrentStep: (step: DexcomSettingsCurrentStep) => void;\r\n};\r\nconst SettingsStep: React.FC<Props> = (props: Props) => {\r\n  return (\r\n    <>\r\n      <TableContainer>\r\n        <Table size=\"sm\">\r\n          <Tbody>\r\n            <Tr>\r\n              <Td>\r\n                <b>Insertion time</b>\r\n              </Td>\r\n              <Td isNumeric>\r\n                <HStack justifyContent=\"end\">\r\n                  <Text color=\"gray.400\"> No senseor inserted</Text>\r\n                </HStack>\r\n              </Td>\r\n            </Tr>\r\n            <Tr>\r\n              <Td>\r\n                <b>Sensor expires</b>\r\n              </Td>\r\n              <Td isNumeric>\r\n                <HStack justifyContent=\"end\">\r\n                  <Text color=\"gray.400\"> No senseor inserted</Text>\r\n                </HStack>\r\n              </Td>\r\n            </Tr>\r\n            <Tr>\r\n              <Td>\r\n                <b>Last calibration</b>\r\n              </Td>\r\n              <Td isNumeric>\r\n                <HStack justifyContent=\"end\">\r\n                  <Text color=\"gray.400\">None</Text>\r\n                </HStack>\r\n              </Td>\r\n            </Tr>\r\n            <Tr\r\n              cursor=\"pointer\"\r\n              onClick={() =>\r\n                props.setCurrentStep(DexcomSettingsCurrentStep.Transmitter)\r\n              }\r\n            >\r\n              <Td>\r\n                <b>Tranmitter ID</b>\r\n              </Td>\r\n              <Td isNumeric>\r\n                <HStack justifyContent=\"end\">\r\n                  <Text cursor=\"pointer\" color=\"gray.400\">\r\n                    8J57WY\r\n                  </Text>\r\n                  <Icon color=\"gray.400\" as={FaChevronRight} />\r\n                </HStack>\r\n              </Td>\r\n            </Tr>\r\n            <Tr>\r\n              <Td>\r\n                <b>Finger prick callibration</b>\r\n              </Td>\r\n              <Td isNumeric>\r\n                <HStack justifyContent=\"end\">\r\n                  <Text color=\"gray.400\"> 0.00 0.00</Text>\r\n                  <Icon color=\"gray.400\" as={FaChevronRight} />\r\n                </HStack>\r\n              </Td>\r\n            </Tr>\r\n            <Tr>\r\n              <Td>\r\n                <b>Excursion threshold</b>\r\n              </Td>\r\n              <Td isNumeric>\r\n                <HStack justifyContent=\"end\">\r\n                  <Text color=\"gray.400\"> 140</Text>\r\n                  <Icon color=\"gray.400\" as={FaChevronRight} />\r\n                </HStack>\r\n              </Td>\r\n            </Tr>\r\n            <Tr>\r\n              <Td>\r\n                <b>Help</b>\r\n              </Td>\r\n              <Td isNumeric>\r\n                <HStack justifyContent=\"end\">\r\n                  <Text color=\"gray.400\">140</Text>\r\n                  <Icon color=\"gray.400\" as={FaChevronRight} />\r\n                </HStack>\r\n              </Td>\r\n            </Tr>\r\n          </Tbody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SettingsStep;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Flex,\r\n  Heading,\r\n  Icon,\r\n  Spacer,\r\n  HStack,\r\n  Text,\r\n  VStack,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n  TableContainer,\r\n} from \"@chakra-ui/react\";\r\nimport { FaChevronRight } from \"react-icons/fa\";\r\n\r\nimport Rotator from \"../common/Rotator\";\r\nenum CurrentStep {\r\n  Settings,\r\n  Transmitter,\r\n}\r\nconst TransmitterStep: React.FC = () => {\r\n  return (\r\n    <>\r\n      <TableContainer>\r\n        <Table size=\"sm\">\r\n          <Tbody>\r\n            <Tr>\r\n              <Td>\r\n                <b>Transmitter ID</b>\r\n              </Td>\r\n              <Td isNumeric>\r\n                <HStack justifyContent=\"end\">\r\n                  <Text color=\"gray.400\"> 8J57WY</Text>\r\n                </HStack>\r\n              </Td>\r\n            </Tr>\r\n            <Tr>\r\n              <Td>\r\n                <b>SN</b>\r\n              </Td>\r\n              <Td isNumeric>No Sensor inseted</Td>\r\n            </Tr>\r\n            <Tr>\r\n              <Td>\r\n                <b>AB</b>\r\n              </Td>\r\n              <Td isNumeric>None</Td>\r\n            </Tr>\r\n            <Tr>\r\n              <Td>\r\n                <b>Activated on</b>\r\n              </Td>\r\n              <Td isNumeric>0/00/00</Td>\r\n            </Tr>\r\n            <Tr>\r\n              <Td>\r\n                <b>Firmware</b>\r\n              </Td>\r\n              <Td isNumeric>0.00 0.00</Td>\r\n            </Tr>\r\n          </Tbody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransmitterStep;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Flex,\r\n  Heading,\r\n  Icon,\r\n  Spacer,\r\n  Stack,\r\n  Text,\r\n  VStack,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n  TableContainer,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport SettingsStep from \"./Settings\";\r\nimport TransmitterStep from \"./Transmitter\";\r\nimport { DexcomSettingsCurrentStep } from \"typings\";\r\n\r\nconst CgmWidgetContainer: React.FC = () => {\r\n  const [currentStep, setCurrentStep] = useState<number>(\r\n    DexcomSettingsCurrentStep.Settings\r\n  );\r\n  return (\r\n    <Box mt={3} w=\"full\">\r\n      {currentStep === DexcomSettingsCurrentStep.Settings && (\r\n        <SettingsStep\r\n          setCurrentStep={(step: DexcomSettingsCurrentStep) => {\r\n            setCurrentStep(step);\r\n          }}\r\n        />\r\n      )}\r\n      {currentStep === DexcomSettingsCurrentStep.Transmitter && (\r\n        <TransmitterStep />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CgmWidgetContainer;\r\n","import React, { useState } from \"react\";\r\nimport { VStack } from \"@chakra-ui/react\";\r\nimport DexcomSettings from \"components/DexcomSettings\";\r\n\r\nconst Settings: React.FC = () => {\r\n  return (\r\n    <VStack mt={3} width=\"full\" spacing={3}>\r\n      <p>Settings</p>\r\n      <DexcomSettings />\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport { appRoutes } from \"app/constants\";\r\nimport Home from \"./home\";\r\nimport Settings from \"./settings\";\r\n\r\nconst Routing = () => {\r\n  const getDefaultBehaviour = (isRoot: boolean) => {\r\n    return isRoot ? <Navigate to={appRoutes.HOME_PAGE} /> : <Home />;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Routes>\r\n        <Route path={appRoutes.ROOT} element={getDefaultBehaviour(true)} />\r\n        <Route\r\n          path={appRoutes.HOME_PAGE}\r\n          element={getDefaultBehaviour(false)}\r\n        />\r\n        <Route\r\n          path={appRoutes.Settings}\r\n          element={<Settings />}\r\n        />\r\n        <Route path=\"*\" element={<strong>Page not found</strong>} />\r\n      </Routes>\r\n    </>\r\n  );\r\n};\r\nexport default Routing;\r\n","import { Capacitor } from \"@capacitor/core\";\r\nimport { isPlatform } from \"@ionic/react\";\r\nimport { Constants } from \"app/constants\";\r\n\r\n//check for desktop platform on touchscreen laptop\r\nfunction isWindows(): boolean {\r\n  if (!window || !navigator) {\r\n    return false;\r\n  }\r\n  const a: string =\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    navigator.userAgent || navigator.vendor || (window as any).opera;\r\n\r\n  return /windows/i.test(a);\r\n}\r\nconst useDetectMobilePlatform = () => {\r\n  const isMobileDevice = Capacitor.isNativePlatform() ?? false;\r\n  const isDesktopView =\r\n    (!isMobileDevice && isPlatform(Constants.DesktopPlatform)) || isWindows();\r\n  const isMobileWebView =\r\n    !isMobileDevice &&\r\n    !isDesktopView &&\r\n    isPlatform(Constants.MobileDesktopPlatform);\r\n  return {\r\n    isMobileWebView,\r\n    isDesktopView,\r\n    isMobileDevice,\r\n  };\r\n};\r\n\r\nexport default useDetectMobilePlatform;\r\n","import React, { useState } from \"react\";\r\nimport { appRoutes } from \"app/constants\";\r\nimport {\r\n  Text,\r\n  Button,\r\n  Flex,\r\n  Link,\r\n  HStack,\r\n  StackDivider,\r\n} from \"@chakra-ui/react\";\r\nimport { BrowserRouter as Router, Link as RouteLink } from \"react-router-dom\";\r\ntype NavLinkProps = { text: string };\r\nconst NavLink = ({ text }: NavLinkProps) => (\r\n  <Link>\r\n    <Text>{text}</Text>\r\n  </Link>\r\n);\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <Flex>\r\n      <HStack spacing={3} divider={<StackDivider />} as=\"nav\">\r\n        <RouteLink to={appRoutes.HOME_PAGE}>\r\n          <NavLink text=\"Home\" />\r\n        </RouteLink>\r\n        <RouteLink to={appRoutes.Settings}>\r\n          <NavLink text=\"Settings\" />\r\n        </RouteLink>\r\n      </HStack>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Flex } from \"@chakra-ui/react\";\nimport Routing from \"pages/Routing\";\nimport \"./index.css\";\nimport useDetectMobilePlatform from \"app/hooks/useDetectMobilePlatform\";\nimport Header from \"components/Navigatons/header\";\n \nfunction App() {\n  \n  const { isMobileWebView, isMobileDevice } = useDetectMobilePlatform();\n  return (\n    <Flex\n    h={isMobileWebView || isMobileDevice ? \"100vh\" : undefined}\n    width=\"full\"\n    direction=\"column\"\n    align=\"stretch\"\n    alignItems=\"center\"\n  >\n    <Header/>\n    <img id=\"image-token\" style={{ display: \"none\" }}></img>\n    <Routing />\n  </Flex>\n \n  );\n}\n\nexport default App;\n","// 1. Import `extendTheme`\r\nimport { extendTheme } from \"@chakra-ui/react\";\r\nconst activeLabelStyles = {\r\n  transform: \"scale(0.85) translateY(-24px)\",\r\n};\r\n// 2. Call `extendTheme` and pass your custom values\r\nexport default extendTheme({\r\n  components: {\r\n    Button: {\r\n      baseStyle: {\r\n        borderRadius: \"16\",\r\n      },\r\n      defaultProps: {\r\n        colorScheme: \"brand\",\r\n      },\r\n      variants: {\r\n        outline: {\r\n          border: \"3px solid \",\r\n          borderColor: \"#3794AA\",\r\n          color: \"#3794AA\",\r\n          fontWeight: \"700\",\r\n          _hover: {\r\n            background: \"#E6FFFA\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    IconButton: {\r\n      baseStyle: {\r\n        color: \"#3794AA\",\r\n        bg: \"transparent\",\r\n      },\r\n    },\r\n    Text: {\r\n      baseStyle: {\r\n        cursor: \"default\",\r\n      },\r\n    },\r\n    Form: {\r\n      variants: {\r\n        floating: {\r\n          container: {\r\n            _focusWithin: {\r\n              label: {\r\n                ...activeLabelStyles,\r\n              },\r\n            },\r\n            \"input:not(:placeholder-shown) + label, .chakra-select__wrapper + label, textarea:not(:placeholder-shown) ~ label\":\r\n              {\r\n                ...activeLabelStyles,\r\n              },\r\n            \"input[type='text']:disabled \": {\r\n              background: \"#F0F0F0\",\r\n            },\r\n\r\n            \"input[type='text']:disabled + label \": {\r\n              background: \"transparent\",\r\n            },\r\n\r\n            label: {\r\n              top: 0,\r\n              left: 0,\r\n              zIndex: 2,\r\n              position: \"absolute\",\r\n              backgroundColor: \"white\",\r\n              pointerEvents: \"none\",\r\n              mx: 2,\r\n              my: 2,\r\n              px: 1,\r\n              transformOrigin: \"left top\",\r\n              color: \"var(--chakra-colors-appGray)\",\r\n              fontWeight: \"normal\",\r\n              fontSize: \"var(--chakra-fontSizes-sm)\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n  styles: {\r\n    global: {\r\n      \"html,body\": {\r\n        bg: \"#FFF\", //\"#F7F7F7\",\r\n        color: \"#595959\",\r\n      },\r\n      a: {\r\n        backgroundColor: \"transparent\",\r\n        color: \"#3880ff\",\r\n        textDecoration: \"underline\",\r\n      },\r\n    },\r\n  },\r\n  colors: {\r\n    highlight: \"#0A7AFF\",\r\n    highlightGreen: \"#C7EFB4\",\r\n    highlightBlue: \"#9BE1E1\",\r\n    highlightGrey: \"#F2F2F2\",\r\n    appGray: \"#999999\",\r\n    appGrayLighter: \"#f5f5f5\",\r\n    appGrayDarker: \"#888888\",\r\n    appRedLight: \"#FF5024\",\r\n    appSecondaryGray: \"#70707099\",\r\n    appRedDark: \"#B72002\",\r\n    mainGreenDarker: \"#4DB748\",\r\n    mainGreenLighter: \"#8ED372\",\r\n    secondaryGreenDarker: \"#468822\",\r\n    secondaryGreenLighter: \"#88B835\",\r\n    secondaryPurpleLighter: \"#9A88E8\",\r\n    secondaryPurpleDarker: \"#6A5AA3\",\r\n    appRed: \"#D13745\",\r\n    appGreen: \"#17AB3C\",\r\n\r\n    brand: {\r\n      main: \"#3794AA\",\r\n      50: \"#13707F\",\r\n      100: \"#c1dcf1\",\r\n      200: \"#9dc5e2\",\r\n      300: \"#77aed5\",\r\n      400: \"#13707F\",\r\n      500: \"#3794AA\",\r\n      600: \"#13707F\",\r\n      700: \"#1d4562\",\r\n      800: \"#0c2a3d\",\r\n      900: \"#000000\",\r\n      1000: \"#595959\",\r\n    },\r\n  },\r\n});\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client'; \nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './App';\nimport theme from \"app/theme\"; \nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n   <React.StrictMode> \n    <BrowserRouter> \n        <ChakraProvider theme={theme} resetCSS> \n            <App />  \n        </ChakraProvider> \n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","appRoutes","DexcomSettingsCurrentStep","Constants","Object","freeze","BASE_URL_ANDROID","BASE_URL_IOS","TRIGGER_WEBVIEW_NAVIGATION","DEVICE_REGISTERED","DEVICE_TOKEN","DesktopPlatform","MobileDesktopPlatform","ERROR_TITLE","ERROR_CODES","DISABLED_USER","CONFLICT","DUPLICATE_USERNAME","DUPLICATE_USER","currentReading","onChangeReading","zIndex","position","w","h","border","borderRadius","alignItems","justifyContent","spacing","lineHeight","pb","as","size","color","defaultValue","toString","onSubmit","width","fontSize","transform","transition","props","useState","reading","setReading","mt","bg","textAlign","my","mx","p","fontWeight","FaCog","onClick","onNavigateSettings","cursor","newReading","parseInt","navigateTo","navigate","useNavigate","to","state","replace","navigateBack","useNavigateTo","Settings","CurrentStep","Tr","Td","isNumeric","setCurrentStep","Transmitter","FaChevronRight","currentStep","step","DexcomSettings","getDefaultBehaviour","isRoot","HOME_PAGE","path","ROOT","element","isMobileDevice","Capacitor","isDesktopView","isPlatform","window","navigator","a","userAgent","vendor","opera","test","isWindows","isMobileWebView","NavLink","text","divider","useDetectMobilePlatform","undefined","direction","align","style","display","activeLabelStyles","extendTheme","components","Button","baseStyle","defaultProps","colorScheme","variants","outline","borderColor","_hover","background","IconButton","Text","Form","floating","container","_focusWithin","label","top","left","backgroundColor","pointerEvents","px","transformOrigin","styles","global","textDecoration","colors","highlight","highlightGreen","highlightBlue","highlightGrey","appGray","appGrayLighter","appGrayDarker","appRedLight","appSecondaryGray","appRedDark","mainGreenDarker","mainGreenLighter","secondaryGreenDarker","secondaryGreenLighter","secondaryPurpleLighter","secondaryPurpleDarker","appRed","appGreen","brand","main","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","render","theme","resetCSS","reportWebVitals"],"sourceRoot":""}